Exposure <- c("Contact with owner's bed", "Known to lick plates in dishwasher", "Allowed on furniture")
Outcome <- c("IgG positive", "IgG positive", "IgG positive")
Odds_Ratio <- c(10.667, 0.094, 14.530)
P_value <- c(0.0397, 0.0397, 0.0481)
CI<-c("8.334 to 13", "-2.24 to 2.43", "11.91 to 17.95")
Table_3 <- data.frame(Exposure, Outcome, Odds_Ratio, P_value, CI)
Table_3<-Table_3 %>%
rename("Odds Ratio"=Odds_Ratio, "p value"=P_value, "95% Confidence Interval"=CI)
write_csv(Table_3, "Table_3.csv")
3/64
D_IgM<-sample_data %>%
filter(Species=="Canine") %>%
ggplot()+
geom_point(aes(x=IgM1_OD, y=IgM2_OD, color=Control_real))+
theme_bw() +
geom_point(data=subset(sample_data, Control_real=="Pre-2019 control" & Species=="Canine"),mapping = aes(x=IgM2_OD, y=IgM2_OD))+
labs(color = "Sample Type")+
geom_point(data=sample_data %>% filter(IgM2_OD==0.525),
pch=21,
fill=NA,
size=4,
color="black", mapping=aes(x=IgM2_OD, y=IgM2_OD)) +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values = c("Pre-2019 control" = "black", "Real sample" = "coral"))+
geom_vline(xintercept = 0.75, linetype="dotted",
color = "black", size=0.5) +
geom_hline(yintercept = 0.75, linetype="dotted",
color = "black", size=0.5)+
geom_text(aes(.73, 0.65, label = "Proposed cut-off=0.75", hjust = -.1), check_overlap = TRUE) +
geom_text(aes(0.16, 2.3, label = "Outlier", hjust = -.1), check_overlap = TRUE) +
ggtitle("Dog IgM") +
xlab("Round 1") + ylab("Round 2")
D_IgM<-sample_data %>%
filter(Species=="Canine") %>%
ggplot()+
geom_point(aes(x=IgM1_OD, y=IgM2_OD, color=Control_real))+
theme_bw() +
geom_point(data=subset(sample_data, Control_real=="Pre-2019 control" & Species=="Canine"),mapping = aes(x=IgM2_OD, y=IgM2_OD))+
labs(color = "Sample Type")+
geom_point(data=sample_data %>% filter(IgM2_OD==0.525),
pch=21,
fill=NA,
size=4,
color="black", mapping=aes(x=IgM2_OD, y=IgM2_OD)) +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values = c("Pre-2019 control" = "black", "Real sample" = "coral"))+
#geom_vline(xintercept = 0.75, linetype="dotted",
# color = "black", size=0.5) +
# geom_hline(yintercept = 0.75, linetype="dotted",
# color = "black", size=0.5)+
#geom_text(aes(.73, 0.65, label = "Proposed cut-off=0.75", hjust = -.1), check_overlap = TRUE) +
geom_text(aes(0.16, 2.3, label = "Outlier", hjust = -.1), check_overlap = TRUE) +
ggtitle("Dog IgM") +
xlab("Round 1") + ylab("Round 2")
OD_figure<-plot_grid(D_IgG, D_IgM, C_IgG, C_IgM, labels = c('A', 'B', 'C', 'D'), rel_heights = c(1, 1, 1, 1))
titleOD<-ggdraw() +
draw_label(
"Round 1 vs Round 2 Optical Densities for Canine and Feline anti-SARS-CoV-2 IgG and IgM",
fontface='bold')
OD_figure<-plot_grid(
titleOD, OD_figure,
ncol = 1,
rel_heights = c(0.1, 1)
)
OD_figure
ggsave("Figure_1.pdf", plot=OD_figure, width=35, height=20, units="cm")
D_IgG<-
sample_data %>%
filter(Species=="Canine") %>%
ggplot()+
geom_point(aes(x=IgG1_OD, y=IgG2_OD, color=Control_real))+
theme_bw() +
geom_point(data=subset(sample_data, Control_real=="Pre-2019 control" & Species=="Canine"),mapping = aes(x=IgG2_OD, y=IgG2_OD))+
labs(color = "Sample Type")+
geom_point(data=sample_data %>% filter(IgG1_OD==0.69),
pch=21,
fill=NA,
size=4,
color="black", mapping=aes(x=IgG2_OD, y=IgG2_OD)) +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values = c("Pre-2019 control" = "black", "Real sample" = "coral"))+
geom_vline(xintercept = 1, linetype="dotted",
color = "black", size=0.5) +
geom_hline(yintercept = 1, linetype="dotted",
color = "black", size=0.5)+
geom_text(aes(1, 0.95, label = "Proposed cut-off=1.0", hjust = -.1), check_overlap = TRUE) +
geom_text(aes(0.38, 1.77, label = "Outlier", hjust = -.1), check_overlap = TRUE) +
ggtitle("Dog IgG") +
xlab("Round 1") + ylab("Round 2")
OD_figure<-plot_grid(D_IgG, D_IgM, C_IgG, C_IgM, labels = c('A', 'B', 'C', 'D'), rel_heights = c(1, 1, 1, 1))
titleOD<-ggdraw() +
draw_label(
"Round 1 vs Round 2 Optical Densities for Canine and Feline anti-SARS-CoV-2 IgG and IgM",
fontface='bold')
OD_figure<-plot_grid(
titleOD, OD_figure,
ncol = 1,
rel_heights = c(0.1, 1)
)
OD_figure
ggsave("Figure_1.pdf", plot=OD_figure, width=35, height=20, units="cm")
8/14
table(dog_patient_data$contact_bed, dog_patient_data$IgG_result)
table(dog_patient_data$contact_humandish, dog_patient_data$IgG_result)
table(dog_patient_data$contact_bed, dog_patient_data$IgG_result)
table(dog_patient_data$contact_humandish, dog_patient_data$IgG_result)
table(dog_patient_data$contact_humandish, dog_patient_data$IgG_result)
fisher.test(dog_patient_data$contact_humandish, dog_patient_data$IgG_result)
fisher.test(droplevels(dog_patient_data$IgG_result), dog_patient_data$contact_humandish)
table(dog_patient_data$contact_humandish, dog_patient_data$IgG_result)
table(dog_patient_data$contact_bed, dog_patient_data$IgG_result)
fisher.test(dog_patient_data$contact_bed, dog_patient_data$IgG_result)
table(dog_patient_data$contact_humandish, dog_patient_data$IgG_result)
table(dog_patient_data$contact_furn, dog_patient_data$IgG_result)
table(dog_patient_data$contact_humandish, dog_patient_data$IgG_result)
8/9
1/9
6/14
8/14
table(dog_patient_data$contact_bed, dog_patient_data$IgG_result)
library(epitools)
install.packages("epitools")
library(epitools)
oddsratio(dog_patient_data$IgG_result, dog_patient_data)
oddsratio(dog_patient_data$IgG_result, dog_patient_data$contact_bed)
?oddsratio
oddsratio(dog_patient_data$IgG_result)
oddsratio(table(dog_patient_data$contact_bed, dog_patient_data$IgG_result))
dog_patient_data
table(dog_patient_data$contact_bed, dog_patient_data$IgG_result)
dog_patient_data %>%
select(all_of(fisher_cols)) %>%
sapply(function(x){oddsratio(dog_patient_data$Any_seropos, x)$p.value})
dog_patient_data %>%
select(all_of(fisher_cols)) %>%
sapply(function(x){oddsratio.fisher(dog_patient_data$Any_seropos, x)$p.value})
dog_patient_data %>%
select(all_of(fisher_cols)) %>%
sapply(function(x){oddsratio.small(dog_patient_data$Any_seropos, x)$p.value})
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(janitor)
library(ggplot2)
library(readxl)
library(gdata)
library(tidyverse)
library(openxlsx)
library(data.table)
library(cowplot)
library(tiff)
library(stringr)
library(broom)
setwd("/Users/crgin/Documents/Papers/COVID")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(janitor)
library(ggplot2)
library(readxl)
library(gdata)
library(tidyverse)
library(openxlsx)
library(data.table)
library(cowplot)
library(tiff)
library(stringr)
library(broom)
library(epitools)
setwd("/Users/tegin/Desktop/GitHub/COVID/R_files_final")
sample_data<-read.xls("sample_data.xlsx", header = TRUE)
summary(sample_data)
sample_data$Species<-as.factor(sample_data$Species)
sample_data$Timepoint<-as.factor(sample_data$Timepoint)
sample_data$Sample_Type<-as.factor(sample_data$Sample_Type)
sample_data$Denny_run<-as.factor(sample_data$Denny_run)
sample_data$Denny_result<-as.factor(sample_data$Denny_result)
sample_data$COBAS_result<-as.factor(sample_data$COBAS_result)
sample_data$Control_real<-as.factor(sample_data$Control_real)
sample_data$IgG_result<-as.factor(sample_data$IgG_result)
sample_data$IgM_resulte<-as.factor(sample_data$IgM_result)
sample_data$VN_result<-as.factor(sample_data$VN_result)
patient_data <- read.xls("patient_data.xlsx", header = TRUE)
patient_data<-patient_data %>%
mutate(across('hp_species', str_replace, '1', 'Canine')) %>%
mutate(across('hp_species', str_replace, '2', 'Feline'))
summary(patient_data)
patient_data$hp_species<-as.factor(patient_data$hp_species)
patient_data$hp_breed<-as.factor(patient_data$hp_breed)
patient_data$hp_sex<-as.factor(patient_data$hp_sex)
patient_data$hp_neuter_yn_unk<-as.factor(patient_data$hp_neuter_yn_unk)
patient_data$exposed_yn<-as.factor(patient_data$exposed_yn)
patient_data$hp_medical_hx<-as.factor(patient_data$hp_medical_hx)
patient_data$hp_medications<-as.factor(patient_data$hp_medications)
patient_data$area_class<-as.factor(patient_data$area_class)
patient_data$contact_bed<-as.factor(patient_data$contact_bed)
patient_data$contact_furn<-as.factor(patient_data$contact_furn)
patient_data$contact_hands<-as.factor(patient_data$contact_hands)
patient_data$contact_face<-as.factor(patient_data$contact_face)
patient_data$contact_body<-as.factor(patient_data$contact_body)
patient_data$eat_habit_humandish<-as.factor(patient_data$eat_habit_humandish)
patient_data$contact_humandish<-as.factor(patient_data$contact_humandish)
patient_data$contact_wildanimals<-as.factor(patient_data$contact_wildanimals)
patient_data$excretehome_habits<-as.factor(patient_data$excretehome_habits)
patient_data$bites_yn<-as.factor(patient_data$bites_yn)
patient_data$scratch_yn<-as.factor(patient_data$scratch_yn)
patient_data$hp_sx_present<-as.factor(patient_data$hp_sx_present)
patient_data$hp_sx_lethargy<-as.factor(patient_data$hp_sx_lethargy)
patient_data$hp_sx_anorexia<-as.factor(patient_data$hp_sx_anorexia)
patient_data$hp_sx_fever<-as.factor(patient_data$hp_sx_fever)
patient_data$hp_sx_nausea<-as.factor(patient_data$hp_sx_nausea)
patient_data$hp_sx_diarrhea<-as.factor(patient_data$hp_sx_diarrhea)
patient_data$hp_sx_sneezing<-as.factor(patient_data$hp_sx_sneezing)
patient_data$hp_sx_coughing<-as.factor(patient_data$hp_sx_coughing)
patient_data$hp_sx_itchy_watery_eyes<-as.factor(patient_data$hp_sx_itchy_watery_eyes)
patient_data$hp_sx_runny_nose<-as.factor(patient_data$hp_sx_runny_nose)
patient_data$hp_sx_gums<-as.factor(patient_data$hp_sx_gums)
patient_data$hp_sx_retching<-as.factor(patient_data$hp_sx_retching)
patient_data$hp_sx_breath<-as.factor(patient_data$hp_sx_breath)
patient_data$hp_sx_nm_eyelid<-as.factor(patient_data$hp_sx_nm_eyelid)
patient_data$hp_sx_other<-as.factor(patient_data$hp_sx_other)
patient_data$Denny_result<-as.factor(patient_data$Denny_result)
patient_data$COBAS_result<-as.factor(patient_data$COBAS_result)
patient_data$IgG_result<-as.factor(patient_data$IgG_result)
patient_data$IgM_result<-as.factor(patient_data$IgM_result)
patient_data$Any_seropos<-as.factor(patient_data$Any_seropos)
patient_data$Virus_neutralization<-as.factor(patient_data$Virus_neutralization)
sample_data$Paper_household_ID<-as.factor(sample_data$Paper_household_ID)
sample_data %>%
drop_na(Timepoint) %>%
mutate(Timepoint=factor(Timepoint, levels=c("0", "1", "3", "7", "14", "21", "28", "45", "60", "120", "180"))) %>%
mutate(Paper_househould_ID=factor(Paper_household_ID, levels=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32"))) %>%
ggplot() +
ggtitle("Sample Types Collected By House and Day")+
xlab("Timepoint (Day)") + ylab("House Number") +
geom_point(mapping = aes(x = Timepoint, y = Paper_household_ID, color=Household_ID)) +
theme_bw() +
theme(plot.title = element_text(hjust=0.5), axis.text.y = element_text(angle=0, size=5), legend.position="None", axis.text.x = element_text(angle=30, size=5))+
facet_wrap(~Sample_Type)+
scale_y_discrete(guide = guide_axis(n.dodge=2))
D_IgG<-
sample_data %>%
filter(Species=="Canine") %>%
ggplot()+
geom_point(aes(x=IgG1_OD, y=IgG2_OD, color=Control_real))+
theme_bw() +
geom_point(data=subset(sample_data, Control_real=="Pre-2019 control" & Species=="Canine"),mapping = aes(x=IgG2_OD, y=IgG2_OD))+
labs(color = "Sample Type")+
geom_point(data=sample_data %>% filter(IgG1_OD==0.69),
pch=21,
fill=NA,
size=4,
color="black", mapping=aes(x=IgG2_OD, y=IgG2_OD)) +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values = c("Pre-2019 control" = "black", "Real sample" = "coral"))+
geom_vline(xintercept = 1, linetype="dotted",
color = "black", size=0.5) +
geom_hline(yintercept = 1, linetype="dotted",
color = "black", size=0.5)+
geom_text(aes(1, 0.95, label = "Proposed cut-off=1.0", hjust = -.1), check_overlap = TRUE) +
geom_text(aes(0.38, 1.77, label = "Outlier", hjust = -.1), check_overlap = TRUE) +
ggtitle("Dog IgG") +
xlab("Round 1") + ylab("Round 2")
D_IgM<-sample_data %>%
filter(Species=="Canine") %>%
ggplot()+
geom_point(aes(x=IgM1_OD, y=IgM2_OD, color=Control_real))+
theme_bw() +
geom_point(data=subset(sample_data, Control_real=="Pre-2019 control" & Species=="Canine"),mapping = aes(x=IgM2_OD, y=IgM2_OD))+
labs(color = "Sample Type")+
geom_point(data=sample_data %>% filter(IgM2_OD==0.525),
pch=21,
fill=NA,
size=4,
color="black", mapping=aes(x=IgM2_OD, y=IgM2_OD)) +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values = c("Pre-2019 control" = "black", "Real sample" = "coral"))+
#geom_vline(xintercept = 0.75, linetype="dotted",
# color = "black", size=0.5) +
# geom_hline(yintercept = 0.75, linetype="dotted",
# color = "black", size=0.5)+
#geom_text(aes(.73, 0.65, label = "Proposed cut-off=0.75", hjust = -.1), check_overlap = TRUE) +
geom_text(aes(0.16, 2.3, label = "Outlier", hjust = -.1), check_overlap = TRUE) +
ggtitle("Dog IgM") +
xlab("Round 1") + ylab("Round 2")
C_IgG<-
sample_data %>%
filter(Species=="Feline") %>%
ggplot()+
geom_point(aes(x=IgG1_OD, y=IgG2_OD, color=Control_real))+
theme_bw() +
geom_point(data=subset(sample_data, Control_real=="Pre-2019 control" & Species=="Canine"),mapping = aes(x=IgG2_OD, y=IgG2_OD))+
labs(color = "Sample Type")+
geom_point(data=sample_data %>% filter(IgG1_OD==0.164 | IgG1_OD==0.18 | IgG1_OD==0.96),
pch=21,
fill=NA,
size=4,
color="black", mapping=aes(x=IgG2_OD, y=IgG2_OD)) +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values = c("Pre-2019 control" = "black", "Real sample" = "coral"))+
geom_vline(xintercept = 0.8, linetype="dotted",
color = "black", size=0.5) +
geom_hline(yintercept = 0.8, linetype="dotted",
color = "black", size=0.5)+
geom_text(aes(0.8, 0.75, label = "Proposed cut-off=0.8", hjust = -.1), check_overlap = TRUE) +
ggtitle("Cat IgG") +
xlab("Round 1") + ylab("Round 2")
C_IgM<-sample_data %>%
filter(Species=="Feline") %>%
ggplot()+
geom_point(aes(x=IgM1_OD, y=IgM2_OD, color=Control_real))+
theme_bw() +
geom_point(data=subset(sample_data, Control_real=="Pre-2019 control" & Species=="Canine"),mapping = aes(x=IgM2_OD, y=IgM2_OD))+
labs(color = "Sample Type")+
scale_color_manual(values = c("Pre-2019 control" = "black", "Real sample" = "coral"))+
geom_point(data=sample_data %>% filter(IgM2_OD==0.79 | IgM2_OD==0.767 | IgM2_OD==0.494),
pch=21,
fill=NA,
size=4,
color="black", mapping=aes(x=IgM2_OD, y=IgM2_OD)) +
theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("Cat IgM") +
xlab("Round 1") + ylab("Round 2")
OD_figure<-plot_grid(D_IgG, D_IgM, C_IgG, C_IgM, labels = c('A', 'B', 'C', 'D'), rel_heights = c(1, 1, 1, 1))
titleOD<-ggdraw() +
draw_label(
"Round 1 vs Round 2 Optical Densities for Canine and Feline anti-SARS-CoV-2 IgG and IgM",
fontface='bold')
OD_figure<-plot_grid(
titleOD, OD_figure,
ncol = 1,
rel_heights = c(0.1, 1)
)
OD_figure
ggsave("Figure_1.pdf", plot=OD_figure, width=35, height=20, units="cm")
sample_data %>%
filter(Control_real!="Pre-2019 control") %>%
distinct(Subject_ID, Species) %>%
count(Species)
patient_data %>%
count(hp_breed, sort=TRUE)
summary(patient_data$hp_age)
patient_data %>%
group_by(hp_species) %>%
summarise(median(hp_age, na.rm=TRUE), range(hp_age, na.rm=TRUE))
table(sample_data$Sample_Type, sample_data$Species)
table(sample_data$Sample_Type, sample_data$Timepoint)
sample_data %>%
filter(Sample_Type!="Serum") %>%
select(Subject_ID, Species, Timepoint) %>%
group_by(Subject_ID) %>%
summarize(n=n_distinct(Timepoint), Species) %>%
filter(n>1) %>%
distinct(Subject_ID, Species) %>%
ungroup(Subject_ID) %>%
count(Species)
table(sample_data$Sample_Type=="Serum", sample_data$Control_real)
sample_data %>%
filter(Control_real=="Real sample" & IgG_result!="Outlier") %>%
count(Species)
Table_1<-sample_data %>%
filter(Denny_result=="Positive") %>%
select(Paper_household_ID, Species, Timepoint, Sample_Type, VL_RNA_cp_per_mL, Denny_result, COBAS_result) %>%
rename("Household"=Paper_household_ID, "Sample"=Sample_Type, "Viral Load (RNA cp/mL)"=VL_RNA_cp_per_mL, "PCR Result"=Denny_result, "COBAS result"=COBAS_result)
write_csv(Table_1, "Table_1.csv")
patient_data %>%
filter(Any_seropos!="NA", IgG_result!="Outlier") %>%
select(hp_species, IgG_result, IgM_result) %>%
count(hp_species, IgG_result, IgM_result) %>%
rename("Species"=hp_species, "IgG Result"=IgG_result, "IgM Result"=IgM_result, "Number Positive"=n)
Table_2<-sample_data %>%
filter(IgG_result!="NA" & IgG_result!="Outlier" & IgG_result!="") %>%
filter(IgG_result=="Positive" | IgM_result=="Positive") %>%
select(Paper_household_ID, Species, Timepoint, IgM_result, IgG_result) %>%
rename("House Number"=Paper_household_ID, "IgG Result"=IgG_result, "IgM Result"=IgM_result, "Timepoint (Days)"=Timepoint)
write_csv(Table_2, "Table 2.csv")
patient_data %>%
filter(Paper_house_ID=="5" | Paper_house_ID=="22")
dog_patient_data <-
patient_data %>%
filter(hp_species=="Canine" & IgG_result!="Outlier")
cat_patient_data <-
patient_data %>%
filter(hp_species=="Feline")
fisher_pval <- function(x, y){
fisher.test(x, y)$p.value
}
odds_ratio = function(x, y){
a = table(x, y)[[1, 1]]
b = table(x, y)[[1, 2]]
c = table(x, y)[[2, 1]]
d = table(x, y)[[2, 2]]
#Apply Haldane-Anscombe correction if necessary
if(a*b*c*d == 0){
OR = ((a+0.5) * (d+0.5)) / ((b+0.5) * (c+0.5))
} else {
OR = (a*d) / (b*c)
}
}
test_columns <- function(df, cols, comp_col, test){
res <- df %>%
select(all_of(cols)) %>%
sapply(function(x) test(droplevels(df[[comp_col]]), x))
}
fisher_cols <- c('hp_species', 'hp_sex', 'hp_neuter_yn_unk', 'exposed_yn', 'area_class', 'contact_bed', 'contact_furn', 'contact_hands', 'contact_face', 'contact_body', 'eat_habit_humandish', 'contact_humandish', 'contact_wildanimals', 'excretehome_habits', 'bites_yn', 'scratch_yn', 'hp_sx_present', 'hp_sx_lethargy', 'hp_sx_anorexia', 'hp_sx_nausea', 'hp_sx_diarrhea', 'hp_sx_sneezing', 'hp_sx_coughing', 'hp_sx_itchy_watery_eyes', 'hp_sx_runny_nose', 'hp_sx_breath')
dog_and_cat_data <- patient_data %>%
filter(IgG_result!="Outlier")
## Dog/cat any seropos
p_val_dog_cat_any<- test_columns(dog_and_cat_data, fisher_cols, 'Any_seropos', fisher_pval)
## Dog any
p_val_dog_any <- test_columns(dog_patient_data, fisher_cols, 'Any_seropos', fisher_pval)
## Dog IgG
p_val_dog_IgG <- test_columns(dog_patient_data, fisher_cols, 'IgG_result', fisher_pval)
## Dog IgM
p_val_dog_IgM <- test_columns(dog_patient_data, fisher_cols, 'IgM_result', fisher_pval)
## Cat IgG
p_val_cat_IgG <-  test_columns(cat_patient_data, fisher_cols, 'IgG_result', fisher_pval)
p_val<-cbind(dog_cat_any=p_val_dog_cat_any,
dog_any=p_val_dog_any,
dog_IgG=p_val_dog_IgG,
dog_IgM=p_val_dog_IgM,
cat_IgG=p_val_cat_IgG)
p_val<-as.data.frame(p_val)
p_val
sig_p_val<-p_val %>%
filter(dog_cat_any<.05 | dog_any<.05 | dog_IgG<.05 | dog_IgM<.05 | cat_IgG<.05)
## Dog/cat any seropos
OR_dog_cat_any<- test_columns(dog_and_cat_data, fisher_cols, 'Any_seropos', odds_ratio)
## Dog any
OR_dog_any <- test_columns(dog_patient_data, fisher_cols, 'Any_seropos', odds_ratio)
## Dog IgG
OR_dog_IgG <- test_columns(dog_patient_data, fisher_cols, 'IgG_result', odds_ratio)
## Dog IgM
OR_dog_IgM <- test_columns(dog_patient_data, fisher_cols, 'IgM_result', odds_ratio)
## Cat IgG
OR_cat_IgG <-  test_columns(cat_patient_data, fisher_cols, 'IgG_result', odds_ratio)
OR <- cbind(dog_cat_any=OR_dog_cat_any,
dog_any=OR_dog_any,
dog_IgG=OR_dog_IgG,
dog_IgM=OR_dog_IgM,
cat_IgG=OR_cat_IgG)
OR <- as.data.frame(OR)
OR
p_val %>%
ggplot(aes(x=dog_cat_any)) +
geom_histogram(colour="black", fill="white", binwidth=0.05)
p_val %>%
ggplot(aes(x=dog_any)) +
geom_histogram(colour="black", fill="white", binwidth=0.05)
p_val %>%
ggplot(aes(x=dog_IgG)) +
geom_histogram(colour="black", fill="white", binwidth=0.05)
p_val %>%
ggplot(aes(x=dog_IgM)) +
geom_histogram(colour="black", fill="white", binwidth=0.05)
p_val %>%
ggplot(aes(x=cat_IgG)) +
geom_histogram(colour="black", fill="white", binwidth=0.05)
Exposure <- c("Contact with owner's bed", "Known to lick plates in dishwasher", "Allowed on furniture")
Outcome <- c("IgG positive", "IgG positive", "IgG positive")
Odds_Ratio <- c(10.667, 0.094, 14.530)
P_value <- c(0.0397, 0.0397, 0.0481)
CI<-c("8.334 to 13", "-2.24 to 2.43", "11.91 to 17.95")
Table_3 <- data.frame(Exposure, Outcome, Odds_Ratio, P_value, CI)
Table_3<-Table_3 %>%
rename("Odds Ratio"=Odds_Ratio, "p value"=P_value, "95% Confidence Interval"=CI)
write_csv(Table_3, "Table_3.csv")
table(dog_patient_data$IgG_result, dog_patient_data$contact_face)
table(dog_patient_data$IgG_result, dog_patient_data$contact_bed)
table(dog_patient_data$IgG_result, dog_patient_data$contact_hands)
table(dog_patient_data$IgG_result, dog_patient_data$contact_body)
table(dog_patient_data$IgG_result, dog_patient_data$eat_habit_humandish)
table(dog_patient_data$IgG_result, dog_patient_data$contact_wildanimals)
table(dog_patient_data$IgG_result, dog_patient_data$bites_yn)
table(dog_patient_data$IgG_result, dog_patient_data$scratch_yn)
table(dog_patient_data$IgG_result, dog_patient_data$area_class)
table(dog_patient_data$IgG_result, dog_patient_data$excretehome_habits)
table(dog_patient_data$IgG_result, dog_patient_data$hp_sx_present)
dog_patient_data$hp_sx_present)
dog_patient_data$hp_sx_present
table(dog_patient_data$hp_subject_hp_id, dog_patient_data$hp_sx_present)
table(dog_patient_data$hp_subject_hp_id, dog_patient_data$hp_sx_present)
dog_patient_data %>%
asdf
dog_patient_data %>%
select(hp_subject_hp_id, contact_furn, hp_sx_present)
dog_patient_data %>%
select(hp_subject_hp_id, contact_furn, hp_sx_present, IgG_result)
dog_patient_data %>%
filter(IgG_result=="Positive") %>%
select(hp_subject_hp_id, contact_furn, hp_sx_present, IgG_result)
dog_patient_data %>%
filter(IgG_result=="Negative") %>%
select(hp_subject_hp_id, contact_furn, hp_sx_present, IgG_result)
patient_data %>%
select(hp_subject_hp_id, contact_furn, hp_sx_present, IgG_result)
patient_data %>%
filter(IgG_result=!"NA") %>%
select(hp_subject_hp_id, contact_furn, hp_sx_present, IgG_result)
patient_data %>%
filter(IgG_result!="NA") %>%
select(hp_subject_hp_id, contact_furn, hp_sx_present, IgG_result)
table(dog_patient_data$hp_subject_hp_id, dog_patient_data$hp_sx_present)
table(dog_patient_data$IgG_result, dog_patient_data$hp_sx_present)
table(dog_patient_data$IgG_result, dog_patient_data$hp_lethargy)
table(dog_patient_data$IgG_result, dog_patient_data$hp_sx_lethargy)
table(dog_patient_data$IgG_result, dog_patient_data$hp_sx_anorexia)
table(dog_patient_data$IgG_result, dog_patient_data$hp_sx_nausea)
table(dog_patient_data$IgG_result, dog_patient_data$hp_sx_diarrhea)
table(dog_patient_data$IgG_result, dog_patient_data$hp_sx_sneezing)
table(dog_patient_data$IgG_result, dog_patient_data$hp_sx_coughing)
table(dog_patient_data$IgG_result, dog_patient_data$hp_sx_itchy_watery_eyes)
table(dog_patient_data$IgG_result, dog_patient_data$hp_sx_runny_nose)
table(dog_patient_data$IgG_result, dog_patient_data$hp_sx_breath)
